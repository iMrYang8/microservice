apiVersion: apps/v1
kind: Deployment
metadata:
  # 保持命名规范
  name: stock-client-deployment
  namespace: stockmgr
spec:
  # 保留您设置的 2 个副本
  replicas: 2
  selector:
    matchLabels:
      # 简化并统一标签，方便管理
      app: stock-client
  template:
    metadata:
      labels:
        # 保持标签和选择器一致
        app: stock-client
    spec:
      containers:
        - name: stock-client
          # 【重要】使用占位符，CI/CD 流水线会自动替换它
          image: your_dockerhub_username/stock-client:latest
          ports:
            # 根据您的项目代码，product-service 的端口是 8082
            - containerPort: 8018
          env:
            # 【关键】添加 Eureka 服务器的地址，以便服务注册
            - name: EUREKA_CLIENT_SERVICEURL_DEFAULTZONE
              value: http://eureka-service.stockmgr:8888/eureka/
            # 保留您设置的内存限制
            - name: JAVA_OPTS
              value: "-Xmx1g"
          # 保留您设置的资源请求和限制，这是很好的实践
          resources:
            requests:
              cpu: 0.5
              memory: 256Mi
            limits:
              cpu: 1
              memory: 1Gi
          # 保留健康检查，并将端口更新为正确的 8082
          readinessProbe:
            tcpSocket:
              port: 8018
            initialDelaySeconds: 60
            periodSeconds: 10
          livenessProbe:
            tcpSocket:
              port: 8018
            initialDelaySeconds: 60
            periodSeconds: 10
---
# 添加对应的 Service，以便其他服务可以访问它
apiVersion: v1
kind: Service
metadata:
  name: stock-client
  namespace: stockmgr
spec:
  type: NodePort
  selector:
    # 确保此选择器与上面 Deployment 中的标签完全匹配
    app: stock-client
  ports:
    - port: 8018
      targetPort: 8018